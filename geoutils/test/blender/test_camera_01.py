import IFObjectBase as ib
import IFMapping as im
import Altjira as ai
import CGeoUtils as cg
import BGeoUtils as bg
import BGeoUtils.utils as bgu
import BGeoUtils.Data as bgd
import BGeoUtils.Object as bgo
import BGeoUtils.Material as bgm
import math as m
import bpy

# memory management
mm = ib.IFObject()

#bCamMatrix0 = cg.Matrix4.create(
#    0.877905, -0.402871, -0.258800, -0.405134, 
#    -0.235215, 0.107940, -0.965931, -6.170712, 
#    0.417080, 0.908870, -0.000001, 0.405135, 
#    0.000000, 0.000000, 0.000000, 1.000000)

bCamMatrix0 = cg.Matrix4.create()
mm.addLocalRef(bCamMatrix0)

cam0 = bpy.data.objects.get("Camera")
bgu.getCGMatrix(cam0.matrix_world, bCamMatrix0)
#cam0.matrix_world = bgu.getBlenderMatrix(
#    bCamMatrix0.transpose())

m0 = cg.Matrix3.create()
mm.addLocalRef(m0)
m0.setElements(bCamMatrix0)
print(m0.getValueStringF(10))

t0 = cg.Vector3.create()
mm.addLocalRef(t0)
bCamMatrix0.getCol(3, t0)
print(t0.getValueString())

bgu.visualizeTransform(m0, t0, "CameraT")

# TODO: Create CGeoUtils Camera from Blender camera, visualize and 
#       validate the model/view matrix generated by getModelViewMatrix().

